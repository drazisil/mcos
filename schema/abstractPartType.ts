import {
    pgTable,
    varchar,
    integer,
    uniqueIndex,
    text,
    numeric,
    type AnyPgColumn,
} from "drizzle-orm/pg-core";

export const abstractPartType = pgTable(
    "abstract_part_type",
    {
        abstractPartTypeId: integer("abstract_part_type_id").notNull().primaryKey(),
        parentAbstractPartType: integer("parent_abstract_part_type").references((): AnyPgColumn => abstractPartType.abstractPartTypeId),
        dependsOn: integer("depends_on").references((): AnyPgColumn => abstractPartType.abstractPartTypeId),
        partFilename: varchar("part_filename", { length: 20 }),
        eAPT: varchar("e_apt", { length: 100 }).notNull(),
        gAPT: varchar("g_apt", { length: 100 }),
        fAPT: varchar("f_apt", { length: 100 }),
        sAPT: varchar("s_apt", { length: 100 }),
        iAPT: varchar("i_apt", { length: 100 }),
        jAPT: varchar("j_apt", { length: 100 }),
        swAPT: varchar("sw_apt", { length: 100 }),
        bAPT: varchar("b_apt", { length: 100 }),
        modifiedRule: integer("modified_rule").default(0),
        eUt: text("e_ut"),
        gUT: text("g_ut"),
        fUT: text("f_ut"),
        sUT: text("s_ut"),
        iUT: text("i_ut"),
        jUT: text("j_ut"),
        swUT: text("sw_ut"),
        bUT: text("b_ut"),
        partPaired: integer("part_paired").default(0),
        schematicPicname1: varchar("schematic_picname1", { length: 9 }),
        schematicPicname2: varchar("schematic_picname2", { length: 9 }),
        blockFamilyCompatibility: integer("block_family_compatibility").default(0),
        repairCostModifier: numeric("repair_cost_modifier", { precision: 100, scale: 7 }),
        scrapCostModifier: numeric("scrap_cost_modifier", { precision: 100, scale: 7 }),
        garbageCategory: integer("garbage_category").default(0),
    },
    (table) => {
        return {
            idIdx: uniqueIndex("abstract_part_type_id_idx").on(table.abstractPartTypeId),
            parentAbstractPartTypeIdx: uniqueIndex("parent_abstract_part_type_idx").on(table.parentAbstractPartType),
            dependsOnIdx: uniqueIndex("depends_on_idx").on(table.dependsOn),
        };
    },
);
