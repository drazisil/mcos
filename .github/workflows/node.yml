name: The Beast

on:
    push:
    pull_request:

env:
    MCO_LOG_LEVEL: warn
    EXTERNAL_HOST: mcouniverse.com 
    PRIVATE_KEY_FILE: thebeast/data/private_key.pem 
    CERTIFICATE_FILE: thebeast/data/mcouniverse.crt 
    PUBLIC_KEY_FILE: thebeast/data/pub.key 

jobs:
     build-test:
        runs-on: ubuntu-latest

        strategy:
            matrix:
                node-version: [18.x, 20.x, 21.x]

        steps:
            - uses: actions/checkout@v4
              with:
                  fetch-depth: 0
            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ matrix.node-version }}

            - name: Run PostgreSQL migrations
                # Runs a script that creates a PostgreSQL table, populates
                # the table with data, and then retrieves the data.
              run: |
                npm install
                npx tsx migrate.ts up
                # Environment variables used by the `client.js` script to create a new PostgreSQL table.
              env:
                # The hostname used to communicate with the PostgreSQL service container
                POSTGRES_HOST: postgres
                # The default PostgreSQL port
                POSTGRES_PORT: 5432
            - name: Install and test
              run: |
                  npm install-ci-test
            - name: Codecov
              if: ${{ always() }}
              env:
                  CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
              run: |
                  pip install --user pytest
                  pip install --user codecov-cli
                  codecovcli --verbose create-commit --fail-on-error 
                  codecovcli --verbose create-report --fail-on-error 
                  codecovcli do-upload --report-type test_results --file thebeast/mcos.junit.xml
                  codecovcli --verbose do-upload --fail-on-error --flag database --name database-${{ matrix.node-version }}
                  codecovcli --verbose do-upload --fail-on-error --flag gateway --name gateway-${{ matrix.node-version }}
                  codecovcli --verbose do-upload --fail-on-error --flag lobby --name lobby-${{ matrix.node-version }}
                  codecovcli --verbose do-upload --fail-on-error --flag login --name login-${{ matrix.node-version }}
                  codecovcli --verbose do-upload --fail-on-error --flag patch --name patch-${{ matrix.node-version }}
                  codecovcli --verbose do-upload --fail-on-error --flag persona --name persona-${{ matrix.node-version }}
                  codecovcli --verbose do-upload --fail-on-error --flag shard --name shard-${{ matrix.node-version }}
                  codecovcli --verbose do-upload --fail-on-error --flag transactions --name transactions-${{ matrix.node-version }}
                  codecovcli --verbose do-upload --fail-on-error --flag core --name core-${{ matrix.node-version }}

            - uses: actions/upload-artifact@v4
              with:
                  name: coverage_${{ matrix.node-version }}
                  path: coverage
